##
## Copyright (C) 2025 Dremio Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    # TODO: revert this image to ubuntu-latest when Polaris Docker images are available for linux/amd64
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read

    steps:

      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          # The setup-gradle action fails, if the wrapper is not using the right version or is not present.
          # Our `gradlew` validates the integrity of the `gradle-wrapper.jar`, so it's safe to disable this.
          validate-wrappers: false

      - name: Gradle Build Project
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: ./gradlew --continue --scan build publish

      - name: Gradle Check Generated Docs
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          ./gradlew --no-scan :authmgr-docs-generator:generateDocs
          git diff --exit-code docs/configuration.md
          if [ $? -ne 0 ]; then
            echo "Generated documentation does not match existing documentation. Please run './gradlew :authmgr-docs-generator:generateDocs' and commit the changes."
            exit 1
          fi

      - name: Archive Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: upload-test-artifacts
          path: |
            **/build/test-results/**
